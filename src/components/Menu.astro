---
import { Icon } from "astro-icon/components";
import Logo from "./Logo.astro";

type Pagina = "/" | "/bruiloft";

export interface Props {
    opPagina: Pagina;
}
const { opPagina } = Astro.props;

interface Navigatie {
    titel: string;
    pagina: Pagina;
}
const navigatie: Navigatie[] = [
    { titel: "Home", pagina: "/" },
    { titel: "Bruiloftsfilms", pagina: "/bruiloft" },
];
---

<nav>
    <div class="menu-balk">
        <button class="menu-knop knop-open" aria-label="Open menu">
            <span>MENU</span>
            <Icon name="ph:list" aria-hidden />
        </button>
    </div>

    <div class="overlay">
        <div class="menu-balk">
            <button class="menu-knop knop-dicht" aria-label="Dicht menu">
                <Icon name="ph:x" aria-hidden />
            </button>

            <a href="/" class="logo">
                <Logo />
            </a>
        </div>

        <ul class="menu">
            {
                navigatie.map((n) => (
                    <li>
                        <a
                            href={n.pagina}
                            aria-current={opPagina === n.pagina && "page"}
                            class:list={{
                                active: opPagina === n.pagina,
                            }}
                        >
                            <Icon name="ph:caret-right" aria-hidden />
                            <span>{n.titel}</span>
                            <Icon name="ph:caret-left" aria-hidden />
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</nav>

<script>
    const knopOpen =
        document.querySelector<HTMLButtonElement>("button.knop-open")!;
    const knopDicht =
        document.querySelector<HTMLButtonElement>("button.knop-dicht")!;
    const menubalk = document.querySelector<HTMLDivElement>("div.menu-balk")!;
    const overlay = document.querySelector<HTMLDivElement>("div.overlay")!;

    const toggleMenu = (toOpen = true) => {
        menubalk.style.display = toOpen === true ? "none" : "flex";
        overlay.style.display = toOpen === true ? "grid" : "none";
    };

    knopOpen.addEventListener("click", () => toggleMenu(true));
    knopDicht.addEventListener("click", () => toggleMenu(false));
</script>

<style>
    nav {
        user-select: none;
    }

    div.menu-balk {
        position: fixed;
        top: 0px;
        inset-inline: 0px;
        z-index: 7;
        display: flex;
        height: 5.5rem;
        justify-content: center;
        align-items: center;

        button.menu-knop {
            all: unset;
            cursor: pointer;

            position: absolute;
            right: 0px;
            padding: 0.25rem;
            margin: 1rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            font-weight: bold;

            color: var(--accentkleur);

            > svg {
                width: 2.5rem;
                height: 2.5rem;
                color: var(--accentkleur);
            }
        }
    }

    div.overlay {
        position: fixed;
        inset: 0px;
        height: 100vh;
        background-color: var(--groen);
        z-index: 6;
        opacity: 0.95;
        display: none;
        place-content: center;
    }

    a.logo {
        display: block;
        color: var(--accentkleur);

        > :global(svg) {
            width: auto;
            height: 2.5rem;
        }
    }

    ul.menu {
        margin: 0;
        padding: 0;

        a {
            text-decoration: none;
        }
        span {
            color: var(--accentkleur);
            margin: 4px;
        }

        li {
            font-size: 2rem;
            font-weight: 700;
            list-style-type: none;
            display: block;

            > a {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 1rem;
                text-transform: uppercase;

                svg {
                    width: 1.75rem;
                    height: 1.75rem;
                    opacity: 0;
                    transition: 0.5s;
                    color: var(--accentkleur);
                }

                &:hover {
                    svg {
                        width: 1.5rem;
                        height: 1.5rem;
                        opacity: 0.9;
                    }
                }

                &.active svg {
                    opacity: 0.5;
                }
            }
        }
    }

    @media only screen and (width < 678px) {
        nav div.menu-balk {
            button.menu-knop {
                gap: 0.5rem;
                padding-inline: 0.75rem;
            }
        }
    }
</style>
