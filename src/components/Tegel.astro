---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { render, type CollectionEntry } from "astro:content";

export interface Props {
    tegel: CollectionEntry<"tegels">;
}

const { tegel } = Astro.props;
const { Content, headings } = await render(tegel);
---

<li aria-label="Tegel">
    <details>
        <summary>
            <Image
                src={`/plaatjes/duimnagels/${tegel.data.duimnagelBestand}`}
                alt={`${headings.at(0)?.text ?? "Tegel"} video thumbnail`}
                width={1920}
                height={1080}
                role="banner"
                loading="lazy"
            />
            <div class="overlay" aria-hidden="true"></div>

            <h2>{tegel.data.titel}</h2>

            <Icon name="ph:caret-right" aria-hidden="true" />
        </summary>

        <div class="beschrijving">
            <Content />
        </div>
    </details>
</li>

<style>
    li {
        list-style: none;
        padding: 0px;
    }

    details {
        padding: 0px;
        width: 100%;
        max-width: 800px;
        height: auto;
        position: relative;
        list-style: none;
        background-color: rgba(200, 200, 200, 0.1);
        border-radius: 0.25rem;
        overflow: hidden;
        user-select: none;

        transition: 0.2s ease-out;

        summary {
            list-style: none;

            display: grid;
            grid-template-areas: stack;
            justify-content: end;
            align-items: end;

            position: relative;
            isolation: isolate;

            img {
                grid-area: stack;
                width: 100%;
                height: auto;
                aspect-ratio: 16 / 9;
                object-fit: cover;
            }

            div.overlay {
                grid-area: stack;
                width: 100%;
                height: 100%;
                background-image: linear-gradient(
                    180deg,
                    rgba(0, 0, 0, 0),
                    rgba(0, 0, 0, 0.8)
                );
                transition: opacity 0.9s ease-out;
                pointer-events: none;
            }

            h2 {
                grid-area: stack;
                width: fit-content;
                height: fit-content;
                margin-block: 1.5rem;
                margin-inline: 2rem;

                font-size: 2rem;
            }

            svg {
                grid-area: stack;
                justify-self: end;
                width: 2.5rem;
                height: 2.5rem;
                margin: 1rem;

                rotate: 45deg;
                transition: rotate 0.2s ease-out;
                color: var(--accentkleur);
            }
        }

        div.beschrijving {
            display: flex;
            flex-direction: column;
            gap: 2rem;
            padding: 2rem;
            padding-bottom: 4rem;

            > :global(p) {
                margin: 0;
            }

            :global(img) {
                width: 100%;
                max-width: 500px;
                height: auto;
                aspect-ratio: 16 / 9;
                object-fit: cover;
            }
        }

        &[open] {
            max-width: 100%;

            summary svg {
                rotate: -135deg;
            }

            div.beschrijving {
                grid-template-rows: 1fr;
            }
        }

        &:hover a.duim-nagel div.overlay {
            opacity: 0.5;
        }
    }

    @media only screen and (width < 678px) {
        li summary svg {
            width: 2rem;
            height: 2rem;
        }
    }
</style>
